#!/usr/bin/env ipython_wrapper
# -*- coding: utf-8 -*-
from __future__ import print_function, division, absolute_import, unicode_literals
import sys, os, argparse, glob
from os import path


if __name__ == '__main__':
    import script_utils # Append mripy to Python path
    from mripy import afni, evaluation, preprocess as prep
    timer = script_utils.ScriptTimer()

    parser = argparse.ArgumentParser(description='Align SurfVol to experiment anat.')
    parser.add_argument('-b', '-base', '--exp_anat', required=True, help='experiment anat (base image)')
    parser.add_argument('-s', '-suma', '--suma', default='../SUMA', help='SUMA directory (default ../SUMA)')
    parser.add_argument('-i', '-input', '--surf_vol', default=None, help='SurfVol (source image), default copy from SUMA')
    parser.add_argument('-o', '-output', '-prefix', '--prefix', default=None, help='output prefix (default SurfVol_Alnd_Exp.nii)')
    parser.add_argument('-r', '--refit_base', action='store_true', help='store S2E transform also in base image')
    parser.add_argument('--nudge_cmd', default=None, help='3drotate command generated by `Nudge Dataset` plugin')
    args, unknownargs = parser.parse_known_args()
    
    suma_subj = afni.get_suma_subj(args.suma)
    if args.surf_vol is None:
        args.surf_vol = afni.get_surf_vol(args.suma)
    if args.prefix is None:
        args.prefix = 'SurfVol_Alnd_Exp.nii'
    prefix, ext = afni.split_out_file(args.prefix)

    lagacy_mode = False
    if lagacy_mode:
        !mripy_align_anat.ipy -b {args.exp_anat} -i {args.surf_vol} -o {prefix+ext} --suffix_1D .A2E.1D \
            {' '.join(unknownargs)}
    else:
        outputs = prep.align_anat(args.exp_anat, args.surf_vol, prefix+ext)
        os.rename(outputs['xform_file'], path.join(path.split(outputs['xform_file'])[0], prefix+'.A2E.1D'))
    if not path.exists(args.prefix): # Check whether mripy_align_anat is successful
        sys.exit(1)
    # This is the traditional "forward" transform that maps old data to new space
    !cat_matvec {prefix+'.A2E.1D'} -I -ONELINE > {prefix+'.E2A.1D'}

    # Copy surface-experiment-mapping matrices to exp_anat, so that
    # you can also use exp_anat as SurfVol
    if args.refit_base:
        !3drefit -atrcopy {prefix+ext} ALLINEATE_MATVEC_S2B_000000 {exp_anat}
        !3drefit -atrcopy {prefix+ext} ALLINEATE_MATVEC_B2S_000000 {exp_anat}

    # Generate viewing script, using relative path in it
    viewing_script = 'run_suma'
    !echo "afni -niml &" > {viewing_script}
    !echo "suma -spec {args.suma}/{suma_subj}_both.spec -sv {prefix+ext} &" >> {viewing_script}

    # Remove temp files
    !rm tmp.*
